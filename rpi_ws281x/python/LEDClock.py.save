
#!/usr/bin/env python3
# NeoPixel library strandtest example
# Author: Tony DiCola (tony@tonydicola.com)
#
# Direct port of the Arduino NeoPixel library strandtest example.  Showcases
# various animations on a strip of NeoPixels.
 
import time
import datetime
from neopixel import *
import argparse
 
# LED strip configuration:
LED_COUNT      = 110      # Number of LED pixels.
LED_PIN        = 18      # GPIO pin connected to the pixels (18 uses PWM!).
#LED_PIN        = 10      # GPIO pin connected to the pixels (10 uses SPI /dev/spidev0.0).
LED_FREQ_HZ    = 800000  # LED signal frequency in hertz (usually 800khz)
LED_DMA        = 10      # DMA channel to use for generating signal (try 10)
LED_BRIGHTNESS = 144     # Set to 0 for darkest and 255 for brightest
LED_INVERT     = False   # True to invert the signal (when using NPN transistor level shift)
LED_CHANNEL    = 0       # set to '1' for GPIOs 13, 19, 41, 45 or 53
 
LAST_MINUTE_ENTRY = 0;

#All words on the clock
ES = [10, 11]
IST = [31, 50, 51]
FUENF = [71, 90, 91, 110]
ZEHN = [9, 12, 29, 32]
VIERTEL = [48, 53, 68, 73, 88, 93, 108]
ZWANZIG = [49, 52, 69, 72, 89, 92, 109]
DREIVIERTEL = [8, 13, 28, 33, 48, 53, 68, 73, 88, 93, 108]
VOR = [7, 14, 27]
NACH = [74, 87, 94, 107]
HALB = [6, 15,  26, 35]
H_ELF = [55, 66, 75]
H_FUENF = [75, 86, 95, 106]
H_EINS = [5, 16, 25, 36]
H_EIN = [5, 16, 25]
H_ZWEI = [76, 85, 96, 105]
H_DREI = [4, 17, 24, 37] 
H_VIER = [77, 84, 97, 104]
H_SECHS = [3, 18, 23, 38, 43]
H_ACHT = [78, 83, 98, 103]
H_SIEBEN = [2, 19, 22, 39, 42, 59]
H_ZWOELF = [62, 79, 82, 99, 102]
H_ZEHN = [ 1, 20, 21, 40]
H_NEUN = [40, 41, 60, 61]
UHR = [81, 100, 101]

def convertTimeToArray():
	now = datetime.datetime.now()
	min = LAST_MINUTE_ENTRY
	hour = now.hour
	array = []
	array.append(ES)
	array.append(IST)
	array.append(getMinuteArray())
	if min == 0:
		array.append(getHourArray(hour, true).append(UHR))
	elif min <= 20:
		array.append(getHourArray(hour, false))
	else:
		array.append(getHourArray(hour + 1, false))
	
	return array

	
def getHourArray(hour, fullTime):

	if hour > 12:
		hour = hour - 12
	if hour == 0:
		return H_ZWOELF
	if hour == 1:
		if fullTime:
			return H_EIN
		return H_EINS
	if hour == 2:
		return H_ZWEI
	if hour == 3:
		return H_DREI
	if hour == 4:
		return H_VIER
	if hour == 5:
		return H_FUENF
	if hour == 6:
		return H_SECHS
	if hour == 7:
		return H_SIEBEN
	if hour == 8:
		return H_ACHT
	if hour == 9:
		return H_NEUN
	if hour == 10:
		return H_ZEHN
	if hour == 11:
		return H_ELF
	if hour == 12:
		return H_ZWOELF
	return []

	

#get minutes	
def getMinuteArray():
	min = LAST_MINUTE_ENTRY
	if min == 0:
		return []
	if min == 5:
		return FUENF.append(NACH)
	if min == 10:
		return ZEHN.append(NACH)
	if min == 15:
		return VIERTEL.append(NACH)
	if min == 20:
		return ZWANZIG.append(NACH)
	if min == 25:
		return FUENF.append(VOR.append(HALB))
	if min == 30:
		return HALB
	if min == 35:
		return FUENF.append(NACH.append(HALB))
	if min == 40:
		return ZEHN.append(NACH.append(HALB))
	if min == 45:
		return DREIVIERTEL
	if min == 50:
		return ZEHN.append(VOR)
	if min == 55:
		return FUENF.append(VOR)
	return []
	


